name: E2E Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    name: Run Playwright E2E Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: yustboard_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Setup Prisma
        run: |
          npx prisma generate
          npx prisma db push --skip-generate
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/yustboard_test
          DIRECT_URL: postgresql://postgres:postgres@localhost:5432/yustboard_test

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Build Next.js application
        run: npm run build
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/yustboard_test
          DIRECT_URL: postgresql://postgres:postgres@localhost:5432/yustboard_test
          NEXTAUTH_URL: http://localhost:3000
          NEXTAUTH_SECRET: test-secret-key-for-ci-only

      - name: Run Playwright tests
        run: npm run test:e2e
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/yustboard_test
          DIRECT_URL: postgresql://postgres:postgres@localhost:5432/yustboard_test
          NEXTAUTH_URL: http://localhost:3000
          NEXTAUTH_SECRET: test-secret-key-for-ci-only
          CI: true

      - name: Upload Playwright report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: test-results/
          retention-days: 30

      - name: Comment PR with test results
        if: github.event_name == 'pull_request' && failure()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const comment = `## ‚ùå E2E Tests Failed

            The Playwright E2E tests have failed. Please check the [test report](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) for details.

            ### Quick Links
            - [View Playwright Report (Artifacts)](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
            - [View Failed Tests](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})

            ### Next Steps
            1. Download the Playwright report artifact
            2. Run \`npx playwright show-report\` locally
            3. Fix the failing tests
            4. Push your changes
            `;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
