name: Lighthouse CI

on:
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

jobs:
  lighthouse:
    name: Lighthouse Performance Audit
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: yustboard_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Setup Prisma
        run: |
          npx prisma generate
          npx prisma db push --skip-generate
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/yustboard_test
          DIRECT_URL: postgresql://postgres:postgres@localhost:5432/yustboard_test

      - name: Build Next.js
        run: npm run build
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/yustboard_test
          DIRECT_URL: postgresql://postgres:postgres@localhost:5432/yustboard_test
          NEXTAUTH_URL: http://localhost:3000
          NEXTAUTH_SECRET: test-secret-key-for-lighthouse
          NODE_ENV: production

      - name: Run Lighthouse CI
        continue-on-error: true
        run: |
          npm install -g @lhci/cli@0.13.x
          lhci autorun || echo "Lighthouse CI completed with warnings"
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/yustboard_test
          DIRECT_URL: postgresql://postgres:postgres@localhost:5432/yustboard_test
          NEXTAUTH_URL: http://localhost:3000
          NEXTAUTH_SECRET: test-secret-key-for-lighthouse
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

      - name: Upload Lighthouse reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: lighthouse-reports
          path: .lighthouseci
          retention-days: 30

      - name: Comment PR with Lighthouse results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');

            // Read the manifest file
            const manifestPath = path.join('.lighthouseci', 'manifest.json');
            if (!fs.existsSync(manifestPath)) {
              console.log('No manifest file found');
              return;
            }

            const manifest = JSON.parse(fs.readFileSync(manifestPath, 'utf8'));
            const results = manifest.map(result => {
              const report = JSON.parse(fs.readFileSync(result.jsonPath, 'utf8'));
              const scores = report.categories;

              return `
### ${result.url}
- 🎯 Performance: ${Math.round(scores.performance.score * 100)}
- ♿ Accessibility: ${Math.round(scores.accessibility.score * 100)}
- ✅ Best Practices: ${Math.round(scores['best-practices'].score * 100)}
- 🔍 SEO: ${Math.round(scores.seo.score * 100)}
              `.trim();
            }).join('\n\n');

            const comment = `## 🔦 Lighthouse CI Results

${results}

[View full report in artifacts](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
            `;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
